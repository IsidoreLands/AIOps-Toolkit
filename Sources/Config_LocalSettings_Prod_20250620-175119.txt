<?php
# LocalSettings.php for OODA WIKI
# OSAD-M1, Action 4 - Establishing Stable Baseline
# This file was automatically generated by the MediaWiki 1.39.2
# installer. If you make manual changes, please keep track in case you
# need to recreate them later.
# See https://www.mediawiki.org/wiki/Manual:Configuration_settings for details

# Protect against web entry
if (!defined('MEDIAWIKI')) {
    exit;
}

## Site settings
$wgSitename = "OODA WIKI";
$wgMetaNamespace = "OODA_WIKI";

## URL configuration
$wgServer = "https://www.ooda.wiki";
$wgScriptPath = "";
$wgArticlePath = "/wiki/$1";
$wgUsePathInfo = true;
$wgResourceBasePath = $wgScriptPath;

## Logo
$wgLogos = [
    '1x' => "$wgResourceBasePath/resources/assets/WikiOodaBoyd2.jpeg",
    'icon' => "$wgResourceBasePath/resources/assets/WikiOodaBoyd2.jpeg",
];

## Database settings
$wgDBtype = "mysql";
$wgDBserver = "localhost";
$wgDBname = "mediawiki";
$wgDBuser = "wikiuser";
$wgDBprefix = "";
$wgDBTableOptions = "ENGINE=InnoDB, DEFAULT CHARSET=binary";
$wgSharedTables[] = "actor";

## Site configuration
if (!isset($wgConf) || !is_object($wgConf)) {
    $wgConf = new SiteConfiguration();
}

## Server Test
$wgCanonicalServer = "https://www.ooda.wiki";
$wgUsePathInfo = true; # Temporary test

## Caching
$wgMainCacheType = CACHE_ACCEL;
$wgSessionCacheType = CACHE_ACCEL;
$wgMessageCacheType = CACHE_ACCEL;
$wgParserCacheType = CACHE_ACCEL;

## Debugging
# Report all PHP errors (notices, warnings, etc.) - This should ideally be for your error log, not browser
# For production, PHP errors should not be displayed to any user in the browser.
# We will control MediaWiki's display of errors further down.
error_reporting( -1 ); 
ini_set( 'log_errors', 1 ); // Ensure PHP errors go to the PHP error log
ini_set( 'error_log', '/var/log/fpm-php.www.log' ); // Or your designated PHP error log
ini_set( 'display_errors', 0 ); // IMPORTANT: Turn OFF direct display of PHP errors to browser for everyone

# Main MediaWiki debug log file (server-side, not browser visible)
$wgDebugLogFile = "/var/www/mediawiki/debug.log";
# Log all SQL queries to the main debug log
$wgDebugDumpSql = true; // Keep this for server-side logging if useful
# Log database errors to the main debug log
$wgDBerrorLog = '/var/www/mediawiki/debug.log';

# Conditional Debugging Features for Specific Users/Groups
if ( isset( $wgUser ) ) { // Check if $wgUser object is available
    $userIsAdminOrIsidore = false;
    if ( $wgUser->isLoggedIn() ) {
        $userGroups = $wgUser->getGroups();
        if ( in_array( 'sysop', $userGroups ) || $wgUser->getName() === 'Isidore' ) {
            $userIsAdminOrIsidore = true;
        }
    }

    if ( $userIsAdminOrIsidore ) {
        // Display PHP errors to browser ONLY for admin/Isidore during active debugging
        // For even better security, you might control this with a query parameter 
        // or only enable it on a dev environment.
        // Use with caution:
        // ini_set( 'display_errors', 1 ); 

        # MediaWiki specific debugging visible in browser for specific users
        $wgShowExceptionDetails = true;     # Show full stack trace for exceptions
        $wgShowSQLErrors = true;            # Show SQL errors on the page (if any)
        $wgDebugToolbar = true;             # Adds a debug toolbar at the bottom of the page
        $wgDevelopmentWarnings = true;      # Shows more MediaWiki specific warnings and notices
        
        # Allow these users to see parser profiling data if enabled
        $wgEnableParserLimitReporting = true; 
    } else {
        # Settings for everyone else (non-admins, non-Isidore)
        $wgShowExceptionDetails = false;
        $wgShowSQLErrors = false;
        $wgDebugToolbar = false;
        $wgDevelopmentWarnings = false;
        $wgEnableParserLimitReporting = false;
    }
} else {
    # Fallback if $wgUser is not set (e.g., very early error or CLI context)
    # Keep these off for general web requests
    $wgShowExceptionDetails = false;
    $wgShowSQLErrors = false;
    $wgDebugToolbar = false;
    $wgDevelopmentWarnings = false;
    $wgEnableParserLimitReporting = false;
    ini_set( 'display_errors', 0 ); // Ensure errors are not displayed if $wgUser isn't set yet for a web request
}


# Specific log groups for more targeted server-side debugging (always active, not browser visible)
# Ensure these files are writable by the web server user (www-data)
# ... (permission comments for touch/chown/chmod remain relevant) ...

$wgDebugLogGroups = []; // Initialize if not already an array

$wgDebugLogGroups['Scribunto'] = [
    'destination' => '/var/www/mediawiki/scribunto_debug.log',
    'level' => 'debug',
];

$wgDebugLogGroups['MultiHttpClient'] = [
    'destination' => '/var/www/mediawiki/debug_multiclient.log',
    'level' => 'debug',
];

$wgDebugLogGroups['curl'] = [
    'destination' => '/var/www/mediawiki/debug_curl.log',
    'level' => 'debug',
];

// Optionally, to see network requests MediaWiki makes more broadly
// $wgDebugLogGroups['http'] = [
// 'destination' => '/var/www/mediawiki/debug_http_general.log',
// 'level' => 'debug',
// ];

// For detailed caching issues, if suspected later:
// $wgDebugLogGroups['CACHE'] = [
// 'destination' => '/var/www/mediawiki/debug_cache.log',
// 'level' => 'debug',
// ];

## Email
$wgEnableEmail = true;
$wgEnableUserEmail = true;
$wgEmergencyContact = "isidorelands@protonmail.com";
$wgPasswordSender = "isidorelands@protonmail.com";
$wgEnotifUserTalk = false;
$wgEnotifWatchlist = false;
$wgEmailAuthentication = true;

## Uploads and media
$wgEnableUploads = true;
$wgUseImageMagick = true;
$wgImageMagickConvertCommand = "/usr/bin/convert";
$wgSVGConverterPath = "/usr/bin";
$wgMaxUploadSize = 100 * 1024 * 1024; # 100 MB
$wgUseInstantCommons = false;
$wgFileExtensions = array_merge($wgFileExtensions, [
    'json', '3dj', '3djson', 'three', 'buff', 'ccm', 'obj', 'svg', 'stl', 'stlb'
]);

## Timezone
$wgLocaltimezone = "America/Los_Angeles";
date_default_timezone_set($wgLocaltimezone);

## Language
$wgLanguageCode = "en";

## Temporary HTTP Timeout
# HTTP Client Timeouts
$wgHTTPTimeout = 20; // Seconds for the entire request
$wgHTTPConnectTimeout = 10; // Seconds just for the connection phase

## Security
$wgAuthenticationTokenVersion = "1";
$wgPingback = false;

## Permissions
$wgGroupPermissions['*']['createaccount'] = true;
$wgGroupPermissions['*']['edit'] = false;
$wgGroupPermissions['wayfinder']['edit'] = true;
$wgGroupPermissions['liberty']['edit'] = true;
$wgGroupPermissions['mystery']['edit'] = true;
$wgGroupPermissions['duffers']['edit'] = true;
$wgGroupPermissions['proveit']['edit'] = true;
$wgGroupPermissions['latin']['edit'] = true;
$wgGroupPermissions['swift']['edit'] = true;
$wgGroupPermissions['how']['edit'] = true;
$wgGroupPermissions['contubadmin']['edit'] = true;
$wgGroupPermissions['sysop']['pagepermissions'] = true;
$wgGroupPermissions['contubadmin']['pagepermissions'] = true;
$wgGroupPermissions['sysop']['import'] = true;
$wgGroupPermissions['sysop']['importupload'] = true;
$wgGroupPermissions['sysop']['editinterface'] = true;
$wgGroupPermissions['sysop']['editsitecss'] = true;
$wgGroupPermissions['bot']['bot'] = true;
$wgGroupPermissions['bot']['read'] = true;
$wgGroupPermissions['bot']['edit'] = true;
$wgGroupPermissions['bot']['protect'] = true;
$wgGroupPermissions['bot']['editprotected'] = true;
$wgAddGroups['sysop'] = ['bot'];
$wgRemoveGroups['sysop'] = ['bot'];
$wgAddGroups['bureaucrat'] = ['bot'];
$wgRemoveGroups['bureaucrat'] = ['bot'];

## Skins
$wgDefaultSkin = "Citizen";
$wgCitizenThemeDefault = 'dark';
wfLoadSkin('MinervaNeue');
wfLoadSkin('MonoBook');
wfLoadSkin('Timeless');
wfLoadSkin('Vector');
wfLoadSkin('Citizen');

## Extensions
#wfLoadExtension('VisualEditor');
wfLoadExtension('WikiEditor');
wfLoadExtension('CodeEditor');
wfLoadExtension('AbuseFilter');
wfLoadExtension('MultimediaViewer');
wfLoadExtension('TitleBlacklist');
wfLoadExtension('PageImages');
wfLoadExtension('InputBox');
wfLoadExtension('PageForms');
#wfLoadExtension('Math');
wfLoadExtension('Cite');
wfLoadExtension('TemplateData');
wfLoadExtension('TemplateStyles');
wfLoadExtension('TemplateStylesExtender');
wfLoadExtension('DynamicPageList3');
wfLoadExtension('ParserFunctions');
wfLoadExtension('ShortDescription');
wfLoadExtension('Babel');
wfLoadExtension('cldr');
wfLoadExtension('CleanChanges');
wfLoadExtension('Translate');
wfLoadExtension('UniversalLanguageSelector');
wfLoadExtension('CSS');
wfLoadExtension('PagePermissions');
#wfLoadExtension('FeaturedFeeds');
wfLoadExtension('3DAlloy');
wfLoadExtension('TimedMediaHandler');
#wfLoadExtension('Interwiki');
wfLoadExtension('Scribunto');
wfLoadExtension('SyntaxHighlight_GeSHi');
wfLoadExtensions(['ConfirmEdit', 'ConfirmEdit/QuestyCaptcha']);

# Wikibase Extensions
#wfLoadExtension('WikibaseClient');
#wfLoadExtension('WikibaseRepository');

# Wikibase Repository Settings
#$wgEnableWikibaseRepo = false;
#$wgEnableWikibaseClient = false;
$wgWBRepoSettings = [
    'entityNamespaces' => [
        'item' => 120,
        'property' => 122,
    ],
    'siteGlobalID' => 'oodawiki',
    'siteLinkGroups' => ['oodawiki'],
    'entitySources' => [
        'local' => [
            'entityNamespaces' => [
                'item' => 120,
                'property' => 122,
            ],
            'repoDatabase' => 'mediawiki',
            'baseUri' => 'https://ooda.wiki/entity/',
            'rdfNodeNamespacePrefix' => 'wd',
            'rdfPredicateNamespacePrefix' => '',
            'interwikiPrefix' => 'oodawiki',
        ],
    ],
];

# Wikibase Client Settings
$wgWBClientSettings = [
    'repoUrl' => 'https://ooda.wiki',
    'repoScriptPath' => '/w',
    'siteGlobalID' => 'oodawiki',
    'siteGroup' => 'oodawiki',
    'entitySources' => [
        'local' => [
            'repoDatabase' => 'mediawiki',
            'baseUri' => 'https://ooda.wiki/entity/',
            'entityNamespaces' => [
                'item' => 120,
                'property' => 122,
            ],
            'rdfNodeNamespacePrefix' => 'wd',
            'rdfPredicateNamespacePrefix' => '',
            'interwikiPrefix' => 'oodawiki',
        ],
    ],
];

# Enable API
$wgEnableWriteAPI = true;
$wgApiFrameOptions = 'SAMEORIGIN';

# Ensure wikitext for main namespace
$wgNamespaceContentModels[NS_MAIN] = 'wikitext';

## Extension configurations
$wgFFmpegLocation = '/usr/bin/ffmpeg';
$wgCCTrailerFilter = true;
$wgCCUserFilter = false;
$wgDefaultUserOptions['usenewrc'] = 1;
$wgGroupPermissions['user']['translate'] = true;
$wgGroupPermissions['user']['translate-messagereview'] = true;
$wgGroupPermissions['user']['translate-groupreview'] = true;
$wgGroupPermissions['user']['translate-import'] = true;
$wgGroupPermissions['sysop']['pagetranslation'] = true;
$wgGroupPermissions['sysop']['translate-manage'] = true;
$wgTranslateDocumentationLanguageCode = 'qqq';
$wgExtraLanguageNames['qqq'] = 'Message documentation';
$wgAllowSiteCSSOnRestrictedPages = true;
$wgImportSources = ['en'];
$wgEnableAPI = true;
$wgScribuntoDefaultEngine = 'luasandbox';
$wgScribuntoEngineConf['luasandbox']['memoryLimit'] = 104857600;
$wgScribuntoEngineConf['luasandbox']['cpuLimit'] = 30;
$wgScribuntoEngineConf['luastandalone']['errorFile'] = '/var/www/mediawiki/scribunto_errors.log';
$wgScribuntoUseGeSHi = false;
$wgUrlProtocols = ['http://', 'https://', 'ftp://', 'ftps://', 'mailto:', 'file://', 'irc://', 'ircs://', 'git://', 'svn://'];
$wgAllowExternalReq = true;
$wgEnableRestAPI = true;
$wgCaptchaClass = 'QuestyCaptcha';
$wgCaptchaQuestions = [
    "What is the name of this wiki?" => $wgSitename,
    "What is the name of John Boyd's famous presentation outlining his theories?" => ["OODA Loop", "The OODA Loop"],
    "Unscramble the words to form a sentence: sad is man glad always a" => ["a sad man is always glad"],
    "Unscramble the words to form a sentence: night it rain does every not" => ["it does not rain every night"],
    "Determine the next number in the sequence: 1, 1, 2, 3, 5, ..." => [8, "eight"],
    "A dealer bought some mules for $1,400. He sold them for $1,600, making $50 on each mule. How many mules were there?" => [4, "four"],
    "A company advanced 8 miles and retreated 2 miles. How far was it then from its starting point?" => [6, "six"],
    "determine the next number in the sequence: 1, 2, 6, 15, 31, 56, ..." => [92]
];
$wgCaptchaTriggers['edit'] = true;
$wgCaptchaTriggers['create'] = true;
$wgCaptchaTriggers['createtalk'] = true;
$wgCaptchaTriggers['addurl'] = true;
$wgCaptchaTriggers['createaccount'] = true;
$wgCaptchaTriggers['badlogin'] = true;

#BOTS
$wgMathEnableExperimentalSvgCache = true;
$wgMathUseInternalRestbase = false;


## Rate limiting
$wgRateLimits = [
    'edit' => [
        'user' => [120, 300],
        'anon' => [30, 300],
        'newbie' => [60, 300],
        'sysop' => [1000, 60]
    ],
    'move' => [
        'user' => [10, 300],
        'sysop' => [100, 60]
    ],
    'upload' => [
        'user' => [10, 300],
        'sysop' => [50, 300]
    ],
    'purge' => [
        'user' => [60, 300],
        'anon' => [10, 300],
        'sysop' => [600, 60]
    ],
    'createaccount' => [
        'ip' => [5, 3600],
        'subnet' => [20, 3600]
    ],
    'delete' => [
        'user' => [50, 300],
        'sysop' => true
    ],
    'protect' => [
        'user' => [50, 300],
        'sysop' => true
    ]
];
$wgDebugLogFile = "/var/www/mediawiki/debug.log";
